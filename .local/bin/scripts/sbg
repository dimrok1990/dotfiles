#!/bin/sh

# SLOC: 29
# POSIX compliant script to set images or gif animations as a desktop background,
# using either pywal to extract a colorscheme for Xresources and (neo)vim, or by
# simply giving an input file/directory as input; in the latter case $0 will select a random file from it.

## DEPENDENCIES: `xwallpaper`
## OPTIONAL: [gifsicle+shantz-xwinwrap-bzr+hsetroot+custom `gifbg` and `extcol` scripts] for GIFs;
##           [pywal+custom `vimwal` script] for integration with `wal` and with `wal.vim`
## NOTE that I also use a custom `dunstreload` script to automatically reload `dunst` notifications setting colors generated by wal if and only if `wal` was activated.

# 2020 Francesco Minnocci <ascoli.minnocci@gmail.com>

#	Usage:
#		` $0 [ -i, -input "path/to/img" ] [ -m, -maximize ] [ -t, -tile ] [ -w, -wal "path/to/img" "backend" ] `
# NOTE: -w and -i are mutually exclusive (kinda)

bgloc="${XDG_DATA_HOME:-$HOME/.local/share/}"/bg
killall -q xwinwrap 2>/dev/null

while getopts ":hi:w:mt" o; do
	case "${o}" in
		h)
			printf "Usage :\\n'$0'\\n\\t [ -i, -input \"path/to/img\" ]\\n\\t [ -m, -maximize: maximize wallpaper ( default format is \"--zoom\" ) ]\\n\\t [ -t, -tile ]\\n\\t [ -w, -wal \"path/to/img\" \"backend\" : use pywal if installed ]\\n\\t [ -h, -help: Show this message ]\\n" && exit ;;

		i)
			vimwal -x && dunstreload
			[ -f "$2" ] && ln -sf "$(readlink -f "$2")" "$bgloc" >/dev/null 2>&1 && notify-send -i "$bgloc" "Wallpaper changed."
			[ -d "$2" ] && ln -sf "$( find "$(readlink -f "$2")" -iregex '.*.\(jpg\|jpeg\|png\|gif\)' -type f | shuf -n 1)" "$bgloc" >/dev/null 2>&1 && notify-send -i "$bgloc" "choosing a nice wallpaper for ya..."
			xrdb -load "$XDG_CONFIG_HOME/X11/Xresources" ;;

		w)
			vimwal -w && dunstreload
			[ -f "$2" ] && ln -sf "$(readlink -f "$2")" "$bgloc" >/dev/null 2>&1 && notify-send -i "$bgloc" "Wallpaper changed."
			backend="$3"
			command -v wal >/dev/null 2>&1 && wal -c && wal --backend "$backend" -i "$(readlink -f "$bgloc")" >/dev/null 2>&1 ;;

		m) format="--maximize" ;;

		t) format="--tile" ;;

		*) printf "Invalid option: -%s\\n" "$OPTARG" && exit 1 ;;
	esac
done

# Use gifview for gifs, or else xwallpaper
	if [ -f ~/.cache/wal/active ]; then
		mime="$( file --dereference --brief --mime-type -- "$bgloc" )"
		if [ "$mime" = "image/gif" ]; then
			setsid -f gifbg "$bgloc"
		else
			xwallpaper "${format:-zoom}" "$bgloc"
		fi
	fi
