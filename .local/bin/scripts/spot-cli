#!/bin/env bash

# Determine currently active spotify player
if $(pgrep ncspot >/dev/null); then
	player="ncspot"
elif $(pgrep spotify >/dev/null); then
	player="spotify"
else
	printf "No supported spotify client found, exiting...\n"
	exit 1
fi

usage() {
	printf "Usage: $0\n\n\t-h, --help\tDisplay usage instructions\n\t-n, --next\tNext song\n\t-p, --prev\tPrevious song\n\t-t, --toggle\tPlay/Pause\n\t-s, --stop\tStop\n\t    --pause\tPause song\n\t    --play\tPlay song\n\t-u, --url\tOpen URL\n\t    --uri\tOpen URI (spotify:* format)\n\t    --seek\tSeek/Rewind (seconds)\n\t    --set\tJump to (seconds)\n"
	exit 1
}

send() {
	dbus-send --print-reply --dest=org.mpris.MediaPlayer2."$player" /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player."$1"
}

seek() { #__ We need to convert to microseconds __#
	dbus-send --print-reply --dest=org.mpris.MediaPlayer2."$player" /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Seek int64:"$1"000000
}

setPos() { #__ Here we also need to specify objpath __#
	dbus-send --print-reply --dest=org.mpris.MediaPlayer2."$player" /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.SetPosition objpath:'/3' int64:"$1"000000
															# /3 is mpris:trackid from Metadata
}

url() { #__ Some parsing logic for URLs __#
	if [ -z "$*" ]; then
		usage
	fi
	string="$(echo $* | rev | cut -d/ -f1-2 | rev)"
	typ="${string%/*}"
	key="${string#*/}"
	dbus-send --print-reply --dest=org.mpris.MediaPlayer2."$player" /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.OpenUri string:spotify:$typ:$key
}

uri() {

}

error() {
	printf "$@\n\n" 1>&2
	usage
}


if [ -z "$1" ] ; then
	error "No arguments given, exiting..."
else
	case $1 in
	-h|--help)
		usage;;
	-n|--next)
		send Next;;
	-p|--prev)
		send Previous;;
	-s|--stop)
		send Stop;;
	-t|--toggle)
		send PlayPause;;
	--play)
		send Play;;
	--pause)
		send Pause;;
	--seek)
		seek "$2";;
	--set)
		setPos "$2";;
	-u|--url)
		url "$2";;
	--uri)
		uri "$2";;
	*)
		error "Invalid option: $1";;
	esac
fi

## TODO: Metadata in bar:
	#  dbus-send --print-reply --dest=org.mpris.MediaPlayer2."$player"	      \
	 # /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get		      \
	 # string:"org.mpris.MediaPlayer2.Player" string:'Metadata'		      \
	 # | grep -Ev "^method"                           `# Ignore the first line.`   \
	 # | grep -Eo '("(.*)")|(\b[0-9][a-zA-Z0-9.]*\b)' `# Filter interesting fiels.`\
	 # | sed -E '2~2 a|'                              `# Mark odd fields.`         \
	 # | tr -d '\n'                                   `# Remove all newlines.`     \
	 # | sed -E 's/\|/\n/g'                           `# Restore newlines.`        \
	 # | sed -E 's/(xesam:)|(mpris:)//'               `# Remove ns prefixes.`      \
	 # | sed -E 's/^"//'                              `# Strip leading...`         \
	 # | sed -E 's/"$//'                              `# ...and trailing quotes.`  \
	 # | sed -E 's/"+/|/'                             `# Regard "" as seperator.`  \
	 # | sed -E 's/ +/ /g'                            `# Merge consecutive spaces.`\
	 # [...] take what you need.

	# Also:
	# dbus-send --print-reply --dest=org.mpris.MediaPlayer2."$player"	/org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get string:"org.mpris.MediaPlayer2.Player" string:'Metadata' |
	# grep -Ev "^method" `# Ignore the first line.` | \grep -Eo '("(.*)")|(\b[0-9][a-zA-Z0-9.]*\b)' `# Filter interesting fiels.`\
	# | sed -E '2~2 a|' `# Mark odd fields.` | tr -d '\n' `# Remove all newlines.` | sed -E 's/\|/\n/g' `# Restore newlines.` | sed -E 's/(xesam:)|(mpris:)//' `# Remove ns prefixes.` |
	# sed -E 's/^"//' `# Strip leading...` | sed -E 's/"$//' `# ...and trailing quotes.` | sed -E 's/"+/|/' `# Regard "" as seperator.` | sed -E 's/ +/ /g' `# Merge consecutive spaces.`\
	# |grep -vE "discNumber|length|trackid|url|trackNumber|albumArtist"
