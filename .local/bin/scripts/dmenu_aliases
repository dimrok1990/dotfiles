#!/usr/bin/env bash

freq=$XDG_CACHE_HOME/dmenu_history
aliases=$ZDOTDIR/plugins/utils/aliasrc
# configuration is done in Xresources
dmenucmd='dmenu -f -i -h 12 -x 8 -y 8 -w 1900'

source "$aliases"

#pull our previously run commands in
history=$(< "$freq" )
#for ones that have arguments, condense them down to an asterisk
history=$(sed "s/[[:space:]].*/*/" <<< "$history")

#generate list of commands including functions and alias'
#tail command gets rid of a few of the weird bash builtins
#at the beginning of the list
cache=$( compgen -a; compgen -c | grep -vxF "$(compgen -a)" | sort | tail -n +10 )

# sort history by frequency of use
sorted=$(sort <<< "$history" | uniq -c | sort -hr | colrm 1 8)
filter=$(sed 's/[*;]*$//' <<< "$sorted")

echo "$filter"
# grep removes the duplicates from the unsorted list
cache_deduped=$(grep -vxF "$filter" <<< "$cache")

# run the actual dmenu and let the user choose a command
cmd="$(echo "$sorted"$'\n'"$cache_deduped" | $dmenucmd)"

# To remove a file from history:
# Trail the selected item with ;rm
if [[ $cmd == *";rm" ]]; then
    cmd=${cmd/;rm/}
    grep -vx "$cmd" $freq > temp
    mv temp $freq
    exit 0
fi

# expand an asterisked command to include argument history
regex='.+[*]$'
if [[ "$cmd" =~ $regex ]]; then
    history=$(grep "${cmd/[*]/}" $freq)
    sorted=$(sort <<< "$history" | uniq -c | sort -hr | colrm 1 8)
    # remove trailing whitespace and asterisks from arguments
    cmd=$(sed 's/[[:space:]*]*$//' <<< "$@")
    dmenucmd='dmenu -i -l 15'
    (sleep .1; xdotool key Tab) &
    cmd="$(echo "$sorted"$'\n'"$cache" | $dmenucmd)"
    if [[ $cmd == *";rm" ]]; then
        cmd=${cmd/;rm/}
        grep -Evx "$cmd" $freq > temp
        mv temp $freq
        exit 0
    fi
fi

if ! [ "$cmd" == "" ]; then
    # remember which commands have been run
    echo "$cmd" >> $freq
    cmdexec=$(alias | grep "${cmd/;/}=" | cut -f2 -d "'" | tr -d "'")
    if [ -z "$cmdexec" ]; then
        cmdexec=${cmd/;/}
    fi

    # open a command up in a terminal
    # a second semicolon uses sudo -A

	if [[ $cmd == *';;' ]]; then
		cmdexec="xdotool mousemove - 1 mousemove restore; sudo -Ai '$cmdexec'"
	elif [[ $cmd == *";" ]]; then
		cmdexec="st -e $cmdexec"
	fi

    # Workaround to run functions...
    echo "$cmdexec" | compgen -F "$cmdexec" 2>/dev/null| bash -i
    # ...and aliases
    echo "$cmdexec" | bash -i
fi
