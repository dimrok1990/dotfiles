#!/bin/bash

set -C -f -u
#IFS=$'\n'
IFS="$(printf '%b_' '\n')"; IFS="${IFS%_}"

# ANSI color codes are supported.
# STDIN is disabled, so interactive scripts won't work properly

# This script is considered a configuration file and must be updated manually.

# Meanings of exit codes:
# code | meaning    | action of ranger
# -----+------------+-------------------------------------------
# 0    | success    | Display stdout as preview
# 1    | no preview | Display no preview at all
# 2    | plain text | Display the plain content of the file

# Script arguments
FILE_PATH="${1}"         # Full path of the highlighted file
HEIGHT="${2}"

#FILE_EXTENSION="${FILE_PATH##*.}"
#FILE_EXTENSION_LOWER=$(echo ${FILE_EXTENSION} | tr '[:upper:]' '[:lower:]')

# Settings
HIGHLIGHT_SIZE_MAX=262143  # 256KiB
HIGHLIGHT_TABWIDTH=8
HIGHLIGHT_STYLE='pablo'

handle_mime() {
    local mimetype="${1}"
    case "$(basename ${FILE_PATH})" in
	    *.md) glow -w 80 -s ~/.config/glow/gruvbox.json "${FILE_PATH}";;
	    *)
	    case "${mimetype}" in
		text/html) w3m -dump "${FILE_PATH}" ;;
		text/troff) man ./ "${FILE_PATH}" | col -b ;;
		text/* | */xml | */json)
		    if [ "$( stat --printf='%s' -- "${FILE_PATH}" )" -gt "${HIGHLIGHT_SIZE_MAX}" ]; then
			exit 2
		    fi
		    if [ "$( tput colors )" -ge 256 ]; then
			local highlight_format='xterm256'
		    else
			local highlight_format='ansi'
		    fi
		    highlight --replace-tabs="${HIGHLIGHT_TABWIDTH}" --out-format="${highlight_format}" \
			--style="${HIGHLIGHT_STYLE}" --force -- "${FILE_PATH}" ;;
		application/zip | application/x-bzip2 | application/x-bzip | applicatio/x-gzip | application/x-xz | rar | application/x-rar-compressed | application/x-tar | application/x-rar | application/x-7z-compressed) atool --list -- "${FILE_PATH}" ;;
		application/msword) catdoc "${FILE_PATH}" ;;
		application/csv) xsv <"${FILE_PATH}" --csv --table --grid ;;
		*/pdf) pdftotext -l 10 -nopgbrk -q -- "${FILE_PATH}" - ;;
		*djvu*) djvutxt "${FILE_PATH}" ;;
		image/*) chafa --fill=block --symbols=block -c 256 -s 80x"${HEIGHT}" "${FILE_PATH}" || exit 1;;
		video/* | audio/*|application/octet-stream) mediainfo "${FILE_PATH}" || exit 1;;
		*opendocument*) odt2txt "${FILE_PATH}" ;;
		*torrent*) { echo "$(eval 'transmission-show "${FILE_PATH}"')" | head -n 200; exit 5; } || exit 1;;
    	    esac;;
    esac
}
if [ "$(readlink -f "${FILE_PATH}")" != "${FILE_PATH}" ]; then
	readlink -f "${FILE_PATH}"
fi
MIMETYPE="$( file --dereference --brief --mime-type -- "${FILE_PATH}" )"
handle_mime "${MIMETYPE}"
exit 1
